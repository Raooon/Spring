<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

	<context:property-placeholder
		location="classpath:config/db.properties"/>
		
	<bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource">
		<!-- property : setter 메소드를 이용해서 호출 -->
		<!-- 객체타입일 때 ref, 아닐 때 value-->
		<!-- <property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"></property>
		<property name="url" value="jdbc:oracle:thin:@localhost:1521:xe"></property>
		<property name="username" value="hr"></property>
		<property name="password" value="hr"></property>
		<property name="maxWait" value="1000"></property> -->
		
		<property name="driverClassName" value="${driver}"></property>
		<property name="url" value="${url}"></property>
		<property name="username" value="${user}"></property>
		<property name="password" value="${password}"></property>
		<property name="maxWait" value="1000"></property>
		
		<!-- maxWait 뿐만 아니라 다양한 프로퍼티를 사용할 수 있다. 커넥션풀의 연결 상황을 조절할 수 있음. -->
	</bean>
	
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
</beans>
